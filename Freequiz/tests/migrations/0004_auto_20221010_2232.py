# Generated by Django 3.2.16 on 2022-10-10 19:32

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tests', '0003_auto_20221009_1751'),
    ]

    operations = [
        migrations.AlterField(
            model_name='blueprintquestion',
            name='additional',
            field=models.TextField(blank=True, null=True, verbose_name='дополнительная информация'),
        ),
        migrations.AlterField(
            model_name='blueprintquestion',
            name='max_score',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='максимальный балл'),
        ),
        migrations.AlterField(
            model_name='blueprintquestion',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='tests.blueprinttest', verbose_name='тест'),
        ),
        migrations.AlterField(
            model_name='blueprintquestion',
            name='text',
            field=models.CharField(max_length=160, verbose_name='текст'),
        ),
        migrations.AlterField(
            model_name='blueprinttest',
            name='access',
            field=models.CharField(choices=[('all', 'Доступ для всех'), ('slug', 'Доступ только по ссылке')], max_length=50, verbose_name='доступ'),
        ),
        migrations.AlterField(
            model_name='blueprinttest',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='автор'),
        ),
        migrations.AlterField(
            model_name='blueprinttest',
            name='created',
            field=models.DateTimeField(auto_now_add=True, verbose_name='дата создания'),
        ),
        migrations.AlterField(
            model_name='blueprinttest',
            name='description',
            field=models.TextField(blank=True, default='Информации о тесте нет', null=True, verbose_name='описание'),
        ),
        migrations.AlterField(
            model_name='blueprinttest',
            name='is_closed',
            field=models.BooleanField(default=False, verbose_name='закрыт для прохождения'),
        ),
        migrations.AlterField(
            model_name='blueprinttest',
            name='name',
            field=models.CharField(max_length=60, verbose_name='название'),
        ),
        migrations.AlterField(
            model_name='blueprinttest',
            name='slug',
            field=models.SlugField(blank=True, default=uuid.uuid4, unique=True, verbose_name='ссылка'),
        ),
        migrations.AlterField(
            model_name='blueprinttest',
            name='timelimit',
            field=models.IntegerField(default=3600, validators=[django.core.validators.MinValueValidator(300), django.core.validators.MaxValueValidator(10800)], verbose_name='ограничение по времени'),
        ),
        migrations.AlterField(
            model_name='question',
            name='blueprint',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='answers', to='tests.blueprintquestion', verbose_name='вопрос'),
        ),
        migrations.AlterField(
            model_name='question',
            name='max_score',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='максимальный балл'),
        ),
        migrations.AlterField(
            model_name='question',
            name='score',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='набранный балл'),
        ),
        migrations.AlterField(
            model_name='question',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='tests.test', verbose_name='тест'),
        ),
        migrations.AlterField(
            model_name='question',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to=settings.AUTH_USER_MODEL, verbose_name='пользователь'),
        ),
        migrations.AlterField(
            model_name='test',
            name='max_result',
            field=models.IntegerField(verbose_name='максимальный балл'),
        ),
        migrations.AlterField(
            model_name='test',
            name='passed',
            field=models.DateTimeField(auto_now_add=True, verbose_name='дата прохождения'),
        ),
        migrations.AlterField(
            model_name='test',
            name='result',
            field=models.IntegerField(verbose_name='набранный балл'),
        ),
        migrations.AlterField(
            model_name='test',
            name='slug',
            field=models.SlugField(default=uuid.uuid4, unique=True, verbose_name='ссылка на результат'),
        ),
        migrations.AlterField(
            model_name='test',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='results', to='tests.blueprinttest', verbose_name='тест'),
        ),
        migrations.AlterField(
            model_name='test',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests_results', to=settings.AUTH_USER_MODEL, verbose_name='пользователь'),
        ),
        migrations.AlterField(
            model_name='variant',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='tests.blueprintquestion', verbose_name='вопрос'),
        ),
        migrations.AlterField(
            model_name='variant',
            name='text',
            field=models.CharField(max_length=120, verbose_name='текст'),
        ),
    ]
